<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.itsource.crm.mapper.EmployeeMapper">
    <!--获取用户名-->
    <select id="selectByUsername" resultType="Employee">
        SELECT * FROM t_employee WHERE username=#{username}
    </select>
    <insert id="save" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO t_employee(username, realName, tel, email, state, dept_sn, sn)
        VALUES
        (#{username},#{realName},#{tel},#{email},#{state},#{department.sn},#{sn})
    </insert>
    <delete id="delete">
        DELETE FROM t_employee WHERE id=#{id}
    </delete>
    <delete id="batchDelete">
        DELETE FROM t_employee WHERE id IN
        <foreach collection="list" item="i" open="(" close=")" separator=",">
            #{i.id}
        </foreach>
    </delete>
    <update id="update">
        UPDATE t_employee
        <set>
            <if test="username!=null and username!=''">
                username=#{username},
            </if>
            <if test="realName!=null and realName!=''">
                realName=#{realName},
            </if>
            <if test="tel!=null and tel!=''">
                tel=#{tel},
            </if>
            <if test="email!=null and email!=''">
                email=#{email},
            </if>
            <if test="state!=null">
                state=#{state},
            </if>
            <if test="department!=null">
                dept_sn=#{department.sn},
            </if>
            <if test="sn!=null">
                sn=#{sn},
            </if>
        </set>
        WHERE id=#{id}
    </update>
    <select id="selectById" resultMap="EmployeeResultMap">
        SELECT * FROM t_employee WHERE id=#{id}
    </select>
    <!-- 查询所有员工用户名,返回给前台下拉框展示 -->
    <select id="selectName" resultType="String">
        SELECT username FROM t_employee
    </select>
    <select id="selectAll" resultMap="EmployeeResultMap">
        SELECT e.id,e.username,e.realName,e.password,e.tel,e.email,e.inputTime,e.state,
        d.id did,d.sn dsn, d.name dname, d.dirPath ddirPath, d.state dstate
        FROM t_employee e JOIN t_department d
        ON e.dept_id = d.id
    </select>
    <select id="selectPageByQuery" resultMap="EmployeeResultMap">
        SELECT e.id,e.username,e.realName,e.tel,e.email,e.inputTime,e.state,e.sn,
        d.id did,d.name dname,d.sn dsn
        FROM t_employee e
        LEFT JOIN t_department d ON e.dept_sn = d.sn
        <include refid="whereSql"/>
        LIMIT #{begin},#{pageSize}
    </select>
    <resultMap id="EmployeeResultMap" type="Employee">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="realName" property="realName"/>
        <result column="password" property="password"/>
        <result column="tel" property="tel"/>
        <result column="email" property="email"/>
        <result column="inputTime" property="inputTime"/>
        <result column="state" property="state"/>
        <result column="sn" property="sn"/>
        <!--部门映射-->
        <association property="department" javaType="Department">
            <id column="did" property="id"/>
            <result column="dname" property="name"/>
            <result column="dsn" property="sn"/>
        </association>
        <collection property="roles" ofType="Role" column="sn" select="queryRolesByEmployeeSn">
        </collection>
    </resultMap>
    <!-- 通过角色id查询角色的权限信息   这里是从中间表查询信息 -->
    <select id="queryRolesByEmployeeSn" parameterType="long" resultMap="RoleResultMap">
        select r.id rid,r.name rname, r.sn rsn
        from t_employee_role er
        join t_role r on r.sn = er.role_sn
        where er.employee_sn = #{sn}
    </select>
    <select id="getTotalDataCount" resultType="long">
        SELECT COUNT(*) FROM t_employee
        <include refid="whereSql"/>
    </select>
    <sql id="whereSql">
        <where>
            <if test="username!=null and username!=''">
                AND username LIKE CONCAT("%",#{username},"%")
            </if>
        </where>
    </sql>
    <select id="selectBySn" resultType="long">
        SELECT username FROM t_employee WHERE sn=#{sn}
    </select>
    <!-- 返回给客户信息管理的下拉框使用 -->
    <select id="getEmployee" resultMap="EmployeeResultMap">
        SELECT e.id,e.username,e.realName,e.sn
        FROM t_employee e
    </select>
    <!-- 通过sn来找到对应的employee实体对象 -->
    <select id="getEmployeeBySn" resultMap="EmployeeResultMap">
        SELECT e.id,e.username,e.realName,e.sn
        FROM t_employee e
        WHERE sn=#{sn}
    </select>
    <!-- 通过name来找到对应的employee实体对象 -->
    <select id="getEmployeeByName" resultMap="EmployeeResultMap">
        SELECT e.id,e.username,e.realName,e.sn
        FROM t_employee e
        WHERE username=#{username}
    </select>
    <!--再嵌套结果-->
    <resultMap id="RoleResultMap" type="Role">
        <id property="id" column="rid"/>
        <result property="name" column="rname"/>
        <result property="sn" column="rsn"/>
    </resultMap>
    <delete id="deleteRoleAndEmployee">
        DELETE FROM t_employee_role WHERE employee_sn = #{empSn}
    </delete>
    <insert id="saveRoleAndEmployee">
        INSERT INTO t_employee_role (role_sn,employee_sn) VALUES
        <foreach collection="roles" item="role" separator=",">
            (#{role.sn},#{empSn})
        </foreach>
    </insert>
</mapper>